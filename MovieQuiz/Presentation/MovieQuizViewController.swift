import UIKit

final class MovieQuizViewController: UIViewController, QuestionFactoryDelegate {
    // MARK: - Lifecycle
    
    /*
     
     –°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≤—å—é!
     
     üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§
     üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§
     üñ§üñ§‚ù§‚ù§‚ù§üñ§‚ù§‚ù§‚ù§üñ§üñ§
     üñ§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§üñ§
     üñ§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§üñ§
     üñ§üñ§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§‚ù§üñ§üñ§
     üñ§üñ§üñ§‚ù§‚ù§‚ù§‚ù§‚ù§üñ§üñ§üñ§
     üñ§üñ§üñ§üñ§‚ù§‚ù§‚ù§üñ§üñ§üñ§üñ§
     üñ§üñ§üñ§üñ§üñ§‚ù§üñ§üñ§üñ§üñ§üñ§
     üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§
     üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§

     */
    
    
    
    @IBOutlet weak var activityIndicator: UIActivityIndicatorView!
    
    @IBOutlet private var QuestionLabel: UILabel!
    @IBOutlet private var imageView: UIImageView!
    @IBOutlet private var textLabel: UILabel!
    @IBOutlet private var counterLabel: UILabel!
    
    @IBOutlet weak var noButtonClicked: UIButton!
    @IBOutlet weak var yesButtonClicked: UIButton!
    
    //—Ç—É—Ç —É –Ω–∞—Å –∏–Ω—å–µ–∫—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–æ viewDidLoad()
    private var alertPresenter: AlertPresenterProto—Åol?
    
    // –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –∏–Ω–¥–µ–∫—Å–æ–º —Ç–µ–∫—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞, –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 0
    private var currentQuestionIndex = 0
    
    // –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å–æ —Å—á—ë—Ç—á–∏–∫–æ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤, –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 0
    private var correctAnswers = 0
    
    //–æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∫–≤–∏–∑–∞
    private let questionsAmount: Int = 10
    
    //—Ñ–∞–±—Ä–∏–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –∫ –∫–æ—Ç–æ—Ä–æ–π –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä
    private var questionFactory: QuestionFactoryProtocol?
    
    //—Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –≤–∏–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    private var currentQuestion: QuizQuestion?
    
    //—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    private var statisticService: StatisticService?
    
    
    func didReceiveNextQuestion(question: QuizQuestion?) {
        guard let question = question else {
            return
        }
        
        currentQuestion = question
        let viewModel = convert(model: question)
        DispatchQueue.main.async { [weak self] in
            self?.show(quiz: viewModel)
        }
    }
    
    // MARK: - Actions
    
    //no button private func
    @IBAction private func noButtonClicked(_ sender: Any) {
        
        guard let currentQuestion = currentQuestion else {
            return
        }
            let answer = false
            showAnswerResult(isCorrect: answer == currentQuestion.correctAnswer)
    }

    
    //yes button private func
    @IBAction private func yesButtonClicked(_ sender: Any) {
        
        guard let currentQuestion = currentQuestion else {
            return
        }
            let answer = true
            showAnswerResult(isCorrect: answer == currentQuestion.correctAnswer)
    }
    
    // MARK: - Private functions
    
    // –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∏ –º–µ–Ω—è–µ—Ç —Ü–≤–µ—Ç —Ä–∞–º–∫–∏, –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥ –ø–µ—Ä–µ—Ö–æ–¥–∞
    // –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –±—É–ª–µ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
    private func showAnswerResult(isCorrect: Bool) {
        
        //–ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –æ—Ç–≤–µ—Ç–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if isCorrect {
                correctAnswers += 1
            }
        //–ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–º–∫—É –∑–∞–≤–∏—Å—è—â–µ–≥–æ –æ—Ç –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–≤–µ—Ç–∞
        imageView.layer.borderWidth = 8
        imageView.layer.borderColor = isCorrect ? UIColor.ypGreen.cgColor : UIColor.ypRed.cgColor
        yesButtonClicked.isEnabled = false //–æ—Ç–∫–ª—é—á–∞–µ–º –æ–±–µ –∫–Ω–æ–ø–∫–∏ —á—Ç–æ–±—ã –Ω–µ –∑–∞—Å—á–∏—Ç—ã–≤–∞–ª–æ—Å—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç–æ–≤ –∑–∞ —Ä–∞–∑
        noButtonClicked.isEnabled = false

        DispatchQueue.main.asyncAfter(deadline: .now() + 1.0) { [weak self] in //—á–µ—Ä–µ–∑ —Å–ª–∞–±—É—é —Å—Å—ã–ª–∫—É –∏–∑–±–∞–≤–ª—è–µ–º—Å—è –æ—Ç —Ä–µ—Ç–µ–π–Ω —Ü–∏–∫–ª–∞
            guard let self = self else { return } // –∞–Ω–≤—Ä–∞–ø–∏–º —Å–ª–∞–±—É—é —Å—Å—ã–ª–∫—É
            self.showNextQuestionOrResults()
            self.yesButtonClicked.isEnabled = true // –≤–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
            self.noButtonClicked.isEnabled = true
        }
    }
    
    // –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–æ–∫–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—å—é –º–æ–¥–µ–ª—å –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
    private func convert(model: QuizQuestion) -> QuizStepViewModel {
        let questionToView = QuizStepViewModel(
            image: UIImage(named: model.image) ?? UIImage(),
            question: model.text,
            questionNumber: "\(currentQuestionIndex + 1)/\(questionsAmount)")
        return questionToView
    }
    
    // –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω –≤–æ–ø—Ä–æ—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –≤—å—é –º–æ–¥–µ–ª—å –≤–æ–ø—Ä–æ—Å–∞ –∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
    private func show(quiz step: QuizStepViewModel) {
        imageView.image = step.image
        textLabel.text = step.question
        counterLabel.text = step.questionNumber
        imageView.layer.cornerRadius = 20
    }
    
    // –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –æ–¥–∏–Ω –∏–∑ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
    private func showNextQuestionOrResults() {
        
        // —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ä–∞–º–∫–∏ –Ω–∞ clear
        imageView.layer.borderColor = UIColor.clear.cgColor
        
        // –∏–¥—ë–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–≤–∏–∑–∞"
        if currentQuestionIndex == questionsAmount - 1 {
            
            guard let statisticService = statisticService else {
                print("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É!")
                return
            }
            statisticService.store(correct: correctAnswers, total: questionsAmount)
            let bestGame = statisticService.bestGame
            let viewModel = AlertModel(title: "–≠—Ç–æ—Ç —Ä–∞—É–Ω–¥ –æ–∫–æ–Ω—á–µ–Ω!",
                                   message: """
                                –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: \(correctAnswers)/\(questionsAmount)
                                –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—ã–≥—Ä–∞–Ω–Ω—ã—Ö –∫–≤–∏–∑–æ–≤: \(statisticService.gamesCount)
                                –†–µ–∫–æ—Ä–¥: \(statisticService.bestGame.correct)/\(statisticService.bestGame.total) (\(bestGame.date.dateTimeString))
                                –°—Ä–µ–¥–Ω—è—è —Ç–æ—á–Ω–æ—Å—Ç—å: \(String(format: "%.2f", statisticService.totalAccuracy))%
                                """,
                                   buttonText: "–°—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑",
                                   completion: { [weak self] in
                guard let self = self else {
                    return
                }
                self.yesButtonClicked.isEnabled = true // –≤–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
                self.noButtonClicked.isEnabled = true
                self.imageView.layer.borderColor = UIColor.clear.cgColor
                self.currentQuestionIndex = 0  //—Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏
                self.correctAnswers = 0
                questionFactory?.requestNextQuestion() //–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
            })
            alertPresenter?.showResult(in: viewModel)
            
            //–∏–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
        } else {
            currentQuestionIndex += 1
            questionFactory?.self.requestNextQuestion()
        }
    }
    
    
    
    //–º–µ—Ç–æ–¥ –ø–æ–∫–∞–∑–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏
    private func showLoadingIndicator() {
        activityIndicator.isHidden = false // –≥–æ–≤–æ—Ä–∏–º, —á—Ç–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ —Å–∫—Ä—ã—Ç
        activityIndicator.startAnimating() // –≤–∫–ª—é—á–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    }
    
    //–º–µ—Ç–æ–¥ —Å–∫—Ä—ã—Ç–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏
    private func hideLoadingIndicator() {
        activityIndicator.isHidden = true // —Å–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
        activityIndicator.stopAnimating() // –æ—Ç–∫–ª—é—á–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    }
    
    
    //–º–µ—Ç–æ–¥ –≤—ã–∑–æ–≤–∞ –∞–ª–µ—Ä—Ç–∞ —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏
    private func showNetworkError(message: String) {
        
        //—Å–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        hideLoadingIndicator()
        
        //–ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –º–æ–¥–µ–ª—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∞–ª–µ—Ä—Ç–µ
        let model = AlertModel(title: "–û—à–∏–±–∫–∞",
                               message: message,
                               buttonText: "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑") { [weak self] in
            guard let self = self else { return }
            
            self.currentQuestionIndex = 0
            self.correctAnswers = 0
            
            self.questionFactory?.requestNextQuestion()
        }
        
        alertPresenter?.showResult(in: model)
    }
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        imageView.layer.masksToBounds = true //—Ä–∞–∑—Ä–µ—à–∞–µ–º —Ä–∏—Å–æ–≤–∞—Ç—å —Ä–∞–º–∫—É
        imageView.layer.cornerRadius = 20 // —Ä–∞–¥–∏—É—Å —Å–∫—Ä—É–≥–ª–µ–Ω–∏—è —É–≥–ª–æ–≤ —Ä–∞–º–∫–∏
        
        //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        statisticService = StatisticServiceImplementation()
        
        //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–ª–µ—Ä—Ç
        alertPresenter = AlertPresenter(viewController: self)
        
        // MARK: - QuestionFactoryDelegate
        
        //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–µ–ª–µ–≥–∞—Ç —Ñ–∞–±—Ä–∏–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤
        questionFactory = QuestionFactory(delegate: self)
        
        func didReceiveNextQuestion(question: QuizQuestion?) {
        }
        //–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
        questionFactory?.requestNextQuestion()
    }
}


/*
 
 —ç—Ç–æ —Å—Ç–∞—Ä—ã–π –∫–æ–¥, –æ—Å—Ç–∞–≤–ª—é –Ω–∞ –ø–∞–º—è—Ç—å
 
 // –±–µ—Ä—ë–º —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å –∏–∑ –º–∞—Å—Å–∏–≤–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –∏–Ω–¥–µ–∫—Å—É —Ç–µ–∫—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
 // –∏ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ show() –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
 let currentQuestion = questions[currentQuestionIndex]
 let firstQuestion = convert(model: currentQuestion)
 show(quiz: firstQuestion)
 
 // –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–æ–∫–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—å—é –º–æ–¥–µ–ª—å –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
 private func convert(model: QuizQuestion) -> QuizStepViewModel {
     let questionToView = QuizStepViewModel(
         image: UIImage(named: model.image) ?? UIImage(),
         question: model.text,
         questionNumber: "\(currentQuestionIndex + 1)/\(questions.count)")
     return questionToView
 }
 
 
 //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–±—Ä–∏–∫–∞ –≤–µ—Ä–Ω—É–ª–∞ –Ω–µ nil –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
 if let firstQuestion = questionFactory.requestNextQuestion() {
     currentQuestion = firstQuestion
     let viewModel = convert(model: firstQuestion)
     
     show(quiz: viewModel)
 
 
 
 // –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞—É–Ω–¥–∞ –∫–≤–∏–∑–∞
 // –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—å—é –º–æ–¥–µ–ª—å QuizResultsViewModel –∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
 private func showResults(quiz result: QuizResultsViewModel) {
     let alert = UIAlertController(
                 title: result.title,
                 message: result.text,
                 preferredStyle: .alert)

     let action = UIAlertAction(title: result.buttonText, style: .default) { [weak self] _ in //—á–µ—Ä–µ–∑ —Å–ª–∞–±—É—é —Å—Å—ã–ª–∫—É –∏–∑–±–∞–≤–ª—è–µ–º—Å—è –æ—Ç —Ä–µ—Ç–µ–π–Ω —Ü–∏–∫–ª–∞
         guard let self = self else { return } // –∞–Ω–≤—Ä–∞–ø–∏–º —Å–ª–∞–±—É—é —Å—Å—ã–ª–∫—É
         
         self.currentQuestionIndex = 0
         self.correctAnswers = 0
         
         questionFactory?.requestNextQuestion()
     }

             alert.addAction(action)
             self.present(alert, animated: true, completion: nil)
 }
 
 // –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞—É–Ω–¥–∞ –∫–≤–∏–∑–∞
 // –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—å—é –º–æ–¥–µ–ª—å QuizResultsViewModel –∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
 private func showResults(quiz result: AlertModel) {
     let alert = UIAlertController(
                 title: result.title,
                 message: result.message,
                 preferredStyle: .alert)

     let action = UIAlertAction(title: result.buttonText, style: .default) { [weak self] _ in //—á–µ—Ä–µ–∑ —Å–ª–∞–±—É—é —Å—Å—ã–ª–∫—É –∏–∑–±–∞–≤–ª—è–µ–º—Å—è –æ—Ç —Ä–µ—Ç–µ–π–Ω —Ü–∏–∫–ª–∞
         guard let self = self else { return } // –∞–Ω–≤—Ä–∞–ø–∏–º —Å–ª–∞–±—É—é —Å—Å—ã–ª–∫—É
         
         self.currentQuestionIndex = 0
         self.correctAnswers = 0
         
         questionFactory?.requestNextQuestion()
     }

             alert.addAction(action)
             self.present(alert, animated: true, completion: nil)
 }
 
 
 
 let text = correctAnswers == questionsAmount ?
         "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ 10 –∏–∑ 10!" :
         "–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ \(correctAnswers) –∏–∑ 10, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!"
         let viewModel = AlertModel (  /*QuizResultsViewModel*/
                                     title: "–≠—Ç–æ—Ç —Ä–∞—É–Ω–¥ –æ–∫–æ–Ω—á–µ–Ω!",
                                     message: text,
                                     buttonText: "–°—ã–≥—Ä–∞—Ç—å –µ—â—ë —Ä–∞–∑",
                                     completion: { [weak self] in
                                         guard let self else { return }
                                         self.yesButtonClicked.isEnabled = true // –≤–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
                                         self.noButtonClicked.isEnabled = true
                                         self.imageView.layer.borderColor = UIColor.clear.cgColor
                                         self.currentQuestionIndex = 0  //—Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏
                                         self.correctAnswers = 0
                                         questionFactory?.requestNextQuestion()//–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
                                     })
 alertPresenter?.showResult(in: viewModel)
 
 */
